    # def choose(self, list_name):
    #     listnames = ('bogon', 'drop')
    #     # istnames = config[listnames]
    #
    #     if list_name in listnames:
    #         self.list_name = list_name
    #         self.url = config[list_name]['url']
    #         self.export = config[list_name]['export_file_name']
    #         self.get_file(list_name)
    #
    #     else:
    #         print(f'\nI cant work with list "{list_name}" yet.')
    #         print('For use please enter: python main.py list_name')
    #         print(f'Currently implemented lists: {listnames}')



# parser = argparse.ArgumentParser(description='Create file with firewall rules.')
# parser.add_argument('list', type=str.lower, help='Name of the blacklist')
# args = parser.parse_args()
# download = Blacklister()
# download.choose(args.list)


# def read_yaml(file):
#     with open(file, "r") as stream:
#         try:
#             print(yaml.safe_load(stream))
#         except yaml.YAMLError as exc:
#             return exc


# def read_yaml(path: str) -> dict:
#     with open(path) as file:
#         return yaml.load(file, yaml.FullLoader)




# bogon = 'http://list.iblocklist.com/?list=lujdnbasfaaixitgmxpp&fileformat=cidr&archiveformat=zip'
# url = bl.get_file(bogon, 'Bogon')

# config = read_yaml('settings.yaml')

# print(config)
